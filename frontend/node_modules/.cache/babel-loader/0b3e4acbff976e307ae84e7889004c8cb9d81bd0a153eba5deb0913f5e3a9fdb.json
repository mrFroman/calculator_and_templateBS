{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3b443076\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"cropperWrapper\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Для масштабирования изображения воспользуйтесь колесиком мыши\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_cropper = _resolveComponent(\"cropper\");\n  const _component_violett_button = _resolveComponent(\"violett-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_cropper, {\n    class: \"cropper\",\n    style: _normalizeStyle($props.size),\n    src: $data.currentImage,\n    \"stencil-props\": {\n      handlers: {},\n      movable: false,\n      resizable: false,\n      aspectRatio: $props.size.width / $props.size.height\n    },\n    \"resize-image\": {\n      adjustStencil: false\n    },\n    \"image-restriction\": \"stencil\",\n    ref: \"cropper\",\n    \"stencil-size\": {\n      width: $props.size.width,\n      height: $props.size.height\n    }\n  }, null, 8 /* PROPS */, [\"style\", \"src\", \"stencil-props\", \"stencil-size\"]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_violett_button, {\n    onClick: $options.crop\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Обрезать\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_violett_button, {\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$refs.file.click())\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"input\", {\n      style: {\n        \"display\": \"none\"\n      },\n      type: \"file\",\n      ref: \"file\",\n      onChange: _cache[0] || (_cache[0] = $event => $options.loadImage($event)),\n      accept: \"image/*\"\n    }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createTextVNode(\" Загрузить изображение \")]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_cropper","style","_normalizeStyle","$props","size","src","$data","currentImage","width","height","ref","_hoisted_3","_component_violett_button","onClick","$options","crop","_cache","$event","_ctx","$refs","file","click","type","onChange","loadImage","accept"],"sources":["D:\\jobs\\calculator-and-templateBS\\frontend\\src\\components\\UI\\MyCropper.vue"],"sourcesContent":["<template>\r\n    <div class=\"cropperWrapper\">\r\n      <h4>Для масштабирования изображения воспользуйтесь колесиком мыши</h4>\r\n        <cropper\r\n                class=\"cropper\"\r\n                :style=\"size\"\r\n                :src=\"currentImage\"\r\n                :stencil-props=\"{\r\n                                handlers: {},\r\n                                movable: false,\r\n                                resizable: false,\r\n                                aspectRatio: size.width/size.height,\r\n                              }\"\r\n                :resize-image=\"{\r\n                                adjustStencil: false\r\n                              }\"\r\n                image-restriction=\"stencil\"\r\n                ref=\"cropper\"\r\n                :stencil-size=\"{\r\n                width: size.width,\r\n                height: size.height\r\n                            }\"\r\n        ></cropper>\r\n        <div class=\"buttons\">\r\n            <violett-button @click=\"crop\">Обрезать</violett-button>\r\n            <violett-button @click=\"$refs.file.click()\">\r\n                <input style=\"display: none\" type=\"file\" ref=\"file\" @change=\"loadImage($event)\" accept=\"image/*\">\r\n                Загрузить изображение\r\n            </violett-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {Cropper} from \"vue-advanced-cropper\";\r\nimport 'vue-advanced-cropper/dist/style.css';\r\nimport ViolettButton from \"@/components/UI/ViolettButton.vue\";\r\n\r\nexport default {\r\n    components: {ViolettButton, Cropper},\r\n    props: {\r\n        image: {\r\n            type: String\r\n        },\r\n        size: {\r\n            width: Number,\r\n            height: Number\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            currentImage: this.image,\r\n            blob: this.image,\r\n            coordinates: {\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                top: 0,\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n        loadImage(event) {\r\n            const {files} = event.target;\r\n            if (files && files[0]) {\r\n                if (this.currentImage) {\r\n                    URL.revokeObjectURL(this.currentImage)\r\n                }\r\n                const blob = URL.createObjectURL(files[0]);\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n                    this.currentImage = blob\r\n                    this.blob = blob\r\n                };\r\n                reader.readAsArrayBuffer(files[0]);\r\n            }\r\n        },\r\n        crop() {\r\n            const {coordinates, canvas,} = this.$refs.cropper.getResult();\r\n            this.coordinates = coordinates;\r\n            this.currentImage = canvas.toDataURL();\r\n            this.$emit('upgradeimage', this.currentImage, this.blob)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.cropper {\r\n    width: 700px;\r\n    height: 550px;\r\n}\r\n    .buttons {\r\n        display: flex;\r\n        gap: 20px;\r\n    }\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAsE,YAAlE,+DAA6D;;EAqB1DD,KAAK,EAAC;AAAS;;;;uBAtBxBE,mBAAA,CA6BM,OA7BNC,UA6BM,GA5BJC,UAAsE,EACpEC,YAAA,CAmBWC,kBAAA;IAlBHN,KAAK,EAAC,SAAS;IACdO,KAAK,EAAAC,eAAA,CAAEC,MAAA,CAAAC,IAAI;IACXC,GAAG,EAAEC,KAAA,CAAAC,YAAY;IACjB,eAAa;;;;mBAAqMJ,MAAA,CAAAC,IAAI,CAACI,KAAK,GAACL,MAAA,CAAAC,IAAI,CAACK;;IAMlO,cAAY,EAAE;;KAEA;IACf,mBAAiB,EAAC,SAAS;IAC3BC,GAAG,EAAC,SAAS;IACZ,cAAY;aAA4BP,MAAA,CAAAC,IAAI,CAACI,KAAK;cAA2BL,MAAA,CAAAC,IAAI,CAACK;;8EAK3Fd,mBAAA,CAMM,OANNgB,UAMM,GALFZ,YAAA,CAAuDa,yBAAA;IAAtCC,OAAK,EAAEC,QAAA,CAAAC;EAAI;sBAAE,MAAQ,C,iBAAR,UAAQ,E;;kCACtChB,YAAA,CAGiBa,yBAAA;IAHAC,OAAK,EAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,CAACC,IAAI,CAACC,KAAK;;sBACpC,MAAiG,CAAjG1B,mBAAA,CAAiG;MAA1FM,KAAqB,EAArB;QAAA;MAAA,CAAqB;MAACqB,IAAI,EAAC,MAAM;MAACZ,GAAG,EAAC,MAAM;MAAEa,QAAM,EAAAP,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEH,QAAA,CAAAU,SAAS,CAACP,MAAM;MAAGQ,MAAM,EAAC;qEAAU,yBAErG,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}