{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport EventsList from '@/components/email-templater/EventsList.vue';\nimport EventsUpload from '@/components/email-templater/EventsUpload.vue';\nimport ChooseTemplate from '@/components/email-templater/ChooseTemplate.vue';\nimport EmailTemplate from \"@/components/email-templater/EmailTemplate.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    EmailTemplate,\n    EventsList,\n    EventsUpload,\n    ChooseTemplate\n  },\n  data() {\n    return {\n      events: [],\n      template: 'Формат не выбран'\n    };\n  },\n  methods: {\n    removeEvent(event) {\n      this.events = this.events.filter(element => element.id !== event.id);\n    },\n    choose(button) {\n      this.template = button.data;\n    },\n    getEvents(eventsArray) {\n      Promise.all(eventsArray.map(link => {\n        axios.get(`http://localhost:3000/events?link=${link}`).then(response => this.events.push(response.data));\n      }));\n    },\n    getDemoEvents() {\n      axios.get(`http://localhost:3000/events/demo`).then(response => this.events.push(...response.data));\n    }\n  }\n};","map":{"version":3,"names":["EventsList","EventsUpload","ChooseTemplate","EmailTemplate","axios","components","data","events","template","methods","removeEvent","event","filter","element","id","choose","button","getEvents","eventsArray","Promise","all","map","link","get","then","response","push","getDemoEvents"],"sources":["D:\\jobs\\calculator-and-templateBS\\frontend\\src\\pages\\TemplaterPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"main__panel\">\r\n      <events-upload\r\n          @loadEvents=\"getEvents\"\r\n          ref=\"replaceEvent\"\r\n      />\r\n      <choose-template\r\n          @choose=\"choose\"\r\n      />\r\n      <violett-button\r\n          style=\"margin: 0\"\r\n          @click=\"getDemoEvents\"\r\n      >\r\n        Получить демоданные из базы данных\r\n      </violett-button>\r\n    </div>\r\n    <events-list\r\n        :events=\"events\"\r\n        @remove=\"removeEvent\"\r\n    />\r\n    <div class=\"email\">\r\n      <div class=\"email__template\">\r\n        <div class=\"header\">\r\n          <p class=\"not-correct\">Если письмо отображается некорректно, то <a href=\"#\">смотрите здесь</a></p>\r\n          <img src=\"@/assets/img/header.jpg\" alt=\"\">\r\n        </div>\r\n        <email-template\r\n            :template=\"template\"\r\n        />\r\n        <div class=\"footer\">\r\n          <img src=\"@/assets/img/footer.jpg\" alt=\"\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport EventsList from '@/components/email-templater/EventsList.vue'\r\nimport EventsUpload from '@/components/email-templater/EventsUpload.vue';\r\nimport ChooseTemplate from '@/components/email-templater/ChooseTemplate.vue';\r\nimport EmailTemplate from \"@/components/email-templater/EmailTemplate.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  components: {\r\n    EmailTemplate,\r\n    EventsList,\r\n    EventsUpload,\r\n    ChooseTemplate\r\n  },\r\n  data() {\r\n    return {\r\n      events: [],\r\n      template: 'Формат не выбран'\r\n    }\r\n  },\r\n  methods: {\r\n    removeEvent(event) {\r\n      this.events = this.events.filter(element => element.id !== event.id)\r\n    },\r\n    choose(button) {\r\n      this.template = button.data\r\n    },\r\n    getEvents(eventsArray) {\r\n      Promise.all(eventsArray.map(link => {\r\n        axios.get(`http://localhost:3000/events?link=${link}`)\r\n            .then(response => this.events.push(response.data))\r\n      }))\r\n    },\r\n    getDemoEvents() {\r\n      axios.get(`http://localhost:3000/events/demo`)\r\n          .then(response => this.events.push(...response.data))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.email {\r\n  margin-right: 5px;\r\n  &::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background: #B0B0B0;\r\n    border-radius: 50px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-track {\r\n    background: #F5F5F5;\r\n  }\r\n}\r\n\r\n.not-correct {\r\n  margin: 5px 5px 20px 5px;\r\n  text-align: center;\r\n  color: #919191;\r\n}\r\n\r\na {\r\n  color: #919191;\r\n}\r\n</style>\r\n"],"mappings":";AAuCA,OAAOA,UAAS,MAAO,6CAA4C;AACnE,OAAOC,YAAW,MAAO,+CAA+C;AACxE,OAAOC,cAAa,MAAO,iDAAiD;AAC5E,OAAOC,aAAY,MAAO,gDAAgD;AAC1E,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVF,aAAa;IACbH,UAAU;IACVC,YAAY;IACZC;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAI,CAACJ,MAAK,GAAI,IAAI,CAACA,MAAM,CAACK,MAAM,CAACC,OAAM,IAAKA,OAAO,CAACC,EAAC,KAAMH,KAAK,CAACG,EAAE;IACrE,CAAC;IACDC,MAAMA,CAACC,MAAM,EAAE;MACb,IAAI,CAACR,QAAO,GAAIQ,MAAM,CAACV,IAAG;IAC5B,CAAC;IACDW,SAASA,CAACC,WAAW,EAAE;MACrBC,OAAO,CAACC,GAAG,CAACF,WAAW,CAACG,GAAG,CAACC,IAAG,IAAK;QAClClB,KAAK,CAACmB,GAAG,CAAE,qCAAoCD,IAAK,EAAC,EAChDE,IAAI,CAACC,QAAO,IAAK,IAAI,CAAClB,MAAM,CAACmB,IAAI,CAACD,QAAQ,CAACnB,IAAI,CAAC;MACvD,CAAC,CAAC;IACJ,CAAC;IACDqB,aAAaA,CAAA,EAAG;MACdvB,KAAK,CAACmB,GAAG,CAAE,mCAAkC,EACxCC,IAAI,CAACC,QAAO,IAAK,IAAI,CAAClB,MAAM,CAACmB,IAAI,CAAC,GAAGD,QAAQ,CAACnB,IAAI,CAAC;IAC1D;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}