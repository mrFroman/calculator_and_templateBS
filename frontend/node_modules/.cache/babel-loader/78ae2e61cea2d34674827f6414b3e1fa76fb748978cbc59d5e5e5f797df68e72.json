{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-2e2550b2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  contenteditable: \"true\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"pushkin\"\n};\nconst _hoisted_5 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_my_cropper = _resolveComponent(\"my-cropper\");\n  const _component_my_modal = _resolveComponent(\"my-modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_my_modal, {\n    show: $data.isVisible,\n    \"onUpdate:show\": _cache[0] || (_cache[0] = $event => $data.isVisible = $event)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_my_cropper, {\n      image: $data.currentImage,\n      onUpgradeimage: $options.upgradeImage,\n      size: $data.cropperSize\n    }, null, 8 /* PROPS */, [\"image\", \"onUpgradeimage\", \"size\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), _createElementVNode(\"div\", {\n    class: \"top\",\n    onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n    onDrop: _cache[3] || (_cache[3] = $event => $options.dragDrop($event))\n  }, [_createElementVNode(\"img\", {\n    src: $data.event.image,\n    alt: \"\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.openModal && $options.openModal(...args))\n  }, null, 8 /* PROPS */, _hoisted_1), $props.isText ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, _toDisplayString($data.event.description), 1 /* TEXT */), $data.event.is_pushkin_card ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \" Действует Пушкинская карта \")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, _toDisplayString($data.event.date) + \" \" + _toDisplayString($data.event.time) + \" \" + _toDisplayString($data.event.venue), 1 /* TEXT */), _createElementVNode(\"a\", {\n    href: $data.event.link,\n    target: \"_blank\"\n  }, \"Выбрать место\", 8 /* PROPS */, _hoisted_5)])) : _createCommentVNode(\"v-if\", true)], 32 /* HYDRATE_EVENTS */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["contenteditable","class","_createVNode","_component_my_modal","show","$data","isVisible","$event","_component_my_cropper","image","currentImage","onUpgradeimage","$options","upgradeImage","size","cropperSize","_createElementVNode","onDragover","_cache","_withModifiers","onDrop","dragDrop","src","event","alt","onClick","args","openModal","$props","isText","_createElementBlock","_hoisted_2","_hoisted_3","_toDisplayString","description","is_pushkin_card","_hoisted_4","date","time","venue","href","link","target","_hoisted_5"],"sources":["D:\\jobs\\calculator-and-templateBS\\frontend\\src\\components\\email-templater\\TopTemplate.vue"],"sourcesContent":["<template>\r\n    <my-modal v-model:show=\"isVisible\">\r\n        <my-cropper\r\n            :image=\"currentImage\"\r\n            @upgradeimage=\"upgradeImage\"\r\n            :size=\"cropperSize\"\r\n        ></my-cropper>\r\n    </my-modal>\r\n    <div class=\"top\"\r\n         @dragover.prevent\r\n         @drop=\"dragDrop($event)\"\r\n    >\r\n\r\n        <img\r\n                :src=\"event.image\"\r\n                alt=\"\"\r\n                @click=\"openModal\"\r\n        >\r\n        <div v-if=\"isText\">\r\n            <p contenteditable=\"true\">\r\n                {{ event.description }}\r\n            </p>\r\n            <p\r\n                    class=\"pushkin\"\r\n                    v-if=\"event.is_pushkin_card\"\r\n            >\r\n                Действует Пушкинская карта\r\n            </p>\r\n            <p>\r\n                {{ event.date }} {{ event.time }} {{ event.venue }}\r\n            </p>\r\n            <a :href=\"event.link\" target=\"_blank\">Выбрать место</a>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport plugImage from '@/assets/img/plug600.png'\r\nimport ViolettButton from \"@/components/UI/ViolettButton.vue\";\r\nimport MyModal from \"@/components/UI/MyModal.vue\";\r\nimport MyCropper from \"@/components/UI/MyCropper.vue\";\r\n\r\nexport default {\r\n    components: {MyCropper, MyModal, ViolettButton},\r\n    props: {\r\n        template: {\r\n            type: Object\r\n        },\r\n        isText: {\r\n            type: Boolean\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            event: {\r\n                description: 'Описание мероприятия',\r\n                date: 'Дата',\r\n                time: 'Время',\r\n                venue: 'Место',\r\n                is_pushkin_card: false,\r\n                image: plugImage\r\n            },\r\n            isVisible: false,\r\n            coordinates: {\r\n                width: 0,\r\n                height: 0,\r\n                left: 0,\r\n                top: 0,\r\n            },\r\n            currentImage: plugImage,\r\n            cropperSize: {\r\n                width: 600,\r\n                height: 300\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        dragDrop(event) {\r\n            const data = JSON.parse(event.dataTransfer.getData('event'))\r\n            this.event = Object.assign(this.event, data)\r\n            this.currentImage = data.image\r\n        },\r\n        openModal() {\r\n            this.isVisible = true\r\n        },\r\n        upgradeImage(image, oldImage) {\r\n            this.event.image = image\r\n            this.currentImage = oldImage\r\n            this.isVisible = false\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.buttons {\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.cropper {\r\n  width: 700px;\r\n  height: 400px;\r\n}\r\n\r\n.top {\r\n  position: relative;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  font-family: Tahoma, Geneva, sans-serif;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  margin: 0 0 30px;\r\n}\r\n\r\np {\r\n  margin: 20px 0;\r\n}\r\n\r\nimg {\r\n  width: 570px;\r\n  height: 285px;\r\n  border-radius: 5px;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  margin: auto;\r\n  display: inline-block;\r\n  background: #8e4adf;\r\n  color: #fff;\r\n  border-radius: 50px;\r\n  padding: 13px 35px 14px;\r\n  font-size: 18px;\r\n  line-height: 15px;\r\n  border: none;\r\n}\r\n\r\n.pushkin {\r\n  color: #de39a2;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;EAmBeA,eAAe,EAAC;AAAM;;;EAIjBC,KAAK,EAAC;;;;;;6DAtBtBC,YAAA,CAMWC,mBAAA;IANOC,IAAI,EAAEC,KAAA,CAAAC,SAAS;yDAATD,KAAA,CAAAC,SAAS,GAAAC,MAAA;;sBAC7B,MAIc,CAJdL,YAAA,CAIcM,qBAAA;MAHTC,KAAK,EAAEJ,KAAA,CAAAK,YAAY;MACnBC,cAAY,EAAEC,QAAA,CAAAC,YAAY;MAC1BC,IAAI,EAAET,KAAA,CAAAU;;;+BAGfC,mBAAA,CAyBM;IAzBDf,KAAK,EAAC,KAAK;IACVgB,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,CAAT,QAAiB;IAChBC,MAAI,EAAAF,MAAA,QAAAA,MAAA,MAAAX,MAAA,IAAEK,QAAA,CAAAS,QAAQ,CAACd,MAAM;MAGvBS,mBAAA,CAIC;IAHQM,GAAG,EAAEjB,KAAA,CAAAkB,KAAK,CAACd,KAAK;IACjBe,GAAG,EAAC,EAAE;IACLC,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEd,QAAA,CAAAe,SAAA,IAAAf,QAAA,CAAAe,SAAA,IAAAD,IAAA,CAAS;uCAEdE,MAAA,CAAAC,MAAM,I,cAAjBC,mBAAA,CAcM,OAAAC,UAAA,GAbFf,mBAAA,CAEI,KAFJgB,UAEI,EAAAC,gBAAA,CADG5B,KAAA,CAAAkB,KAAK,CAACW,WAAW,kBAIV7B,KAAA,CAAAkB,KAAK,CAACY,eAAe,I,cAFnCL,mBAAA,CAKI,KALJM,UAKI,EAFH,8BAED,K,mCACApB,mBAAA,CAEI,WAAAiB,gBAAA,CADG5B,KAAA,CAAAkB,KAAK,CAACc,IAAI,IAAG,GAAC,GAAAJ,gBAAA,CAAG5B,KAAA,CAAAkB,KAAK,CAACe,IAAI,IAAG,GAAC,GAAAL,gBAAA,CAAG5B,KAAA,CAAAkB,KAAK,CAACgB,KAAK,kBAEpDvB,mBAAA,CAAuD;IAAnDwB,IAAI,EAAEnC,KAAA,CAAAkB,KAAK,CAACkB,IAAI;IAAEC,MAAM,EAAC;KAAS,eAAa,iBAAAC,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}