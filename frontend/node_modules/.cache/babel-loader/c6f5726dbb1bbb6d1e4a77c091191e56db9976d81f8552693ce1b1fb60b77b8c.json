{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b70c8be2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Выберите города\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"cities\"\n};\nconst _hoisted_3 = {\n  class: \"checkbox\"\n};\nconst _hoisted_4 = [\"id\", \"value\"];\nconst _hoisted_5 = [\"for\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_calculator_button = _resolveComponent(\"calculator-button\");\n  const _component_my_modal = _resolveComponent(\"my-modal\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_my_modal, {\n    show: $data.isVisible,\n    \"onUpdate:show\": _cache[1] || (_cache[1] = $event => $data.isVisible = $event)\n  }, {\n    default: _withCtx(() => [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cities, city => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n        type: \"checkbox\",\n        id: city,\n        value: city,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedCities = $event)\n      }, null, 8 /* PROPS */, _hoisted_4), [[_vModelCheckbox, $data.selectedCities]]), _createElementVNode(\"label\", {\n        for: city\n      }, _toDisplayString(city), 9 /* TEXT, PROPS */, _hoisted_5)]);\n    }), 256 /* UNKEYED_FRAGMENT */))]), _createVNode(_component_calculator_button, {\n      style: {\n        \"margin\": \"20px 0\"\n      },\n      onClick: $options.updateCity\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"Выбрать\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]), _createVNode(_component_calculator_button, {\n    onClick: $options.showModal\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Выбрать города\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_createVNode","_component_my_modal","show","$data","isVisible","$event","_hoisted_1","_hoisted_2","_Fragment","_renderList","cities","city","_hoisted_3","type","id","value","selectedCities","for","_toDisplayString","_hoisted_5","_component_calculator_button","style","onClick","$options","updateCity","showModal"],"sources":["D:\\jobs\\calculator-and-templateBS\\frontend\\src\\components\\calculator\\ChooseCity.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <my-modal\r\n        v-model:show=\"isVisible\"\r\n    >\r\n      <h2>Выберите города</h2>\r\n      <div class=\"cities\">\r\n\r\n        <div class=\"checkbox\"\r\n             v-for=\"city in cities\"\r\n        >\r\n          <input\r\n              type=\"checkbox\"\r\n              :id=city\r\n              :value=city\r\n              v-model=\"selectedCities\"\r\n          >\r\n          <label :for=city>{{ city }}</label>\r\n        </div>\r\n      </div>\r\n      <calculator-button style=\"margin: 20px 0;\" @click=\"updateCity\">Выбрать</calculator-button>\r\n    </my-modal>\r\n    <calculator-button @click=\"showModal\">Выбрать города</calculator-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CalculatorButton from \"@/components/UI/CalculatorButton.vue\";\r\nimport MyModal from \"@/components/UI/MyModal.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  components: {MyModal, CalculatorButton},\r\n  emits: ['update:citiesProp'],\r\n  props: {\r\n    citiesProp: {\r\n      type: Array\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isVisible: false,\r\n      cities: [],\r\n      selectedCities: []\r\n    }\r\n  },\r\n  methods: {\r\n    showModal() {\r\n      this.isVisible = true\r\n    },\r\n    updateCity() {\r\n      if(this.selectedCities.length < 1) {\r\n        alert('Выберите минимум 1 город')\r\n        return\r\n      }\r\n      this.$emit('update:citiesProp', this.selectedCities)\r\n      this.isVisible = false\r\n    }\r\n  },\r\n  mounted() {\r\n    axios.get(`http://localhost:3000/cities`)\r\n        .then(response => this.cities = response.data)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n.cities {\r\n  font-size: 14px;\r\n  color: #222;\r\n  letter-spacing: normal;\r\n  columns: 7 auto;\r\n  padding: 20px 40px;\r\n}\r\n\r\n.checkbox {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n  padding: 5px 0;\r\n  cursor: pointer;\r\n}\r\n\r\nlabel {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;gEAKMA,mBAAA,CAAwB,YAApB,iBAAe;;EACdC,KAAK,EAAC;AAAQ;;EAEZA,KAAK,EAAC;AAAU;;;;;;uBAP3BC,mBAAA,CAsBM,cArBJC,YAAA,CAmBWC,mBAAA;IAlBCC,IAAI,EAAEC,KAAA,CAAAC,SAAS;yDAATD,KAAA,CAAAC,SAAS,GAAAC,MAAA;;sBAEzB,MAAwB,CAAxBC,UAAwB,EACxBT,mBAAA,CAaM,OAbNU,UAaM,I,kBAXJR,mBAAA,CAUMS,SAAA,QAAAC,WAAA,CATcN,KAAA,CAAAO,MAAM,EAAdC,IAAI;2BADhBZ,mBAAA,CAUM,OAVNa,UAUM,G,gBAPJf,mBAAA,CAKC;QAJGgB,IAAI,EAAC,UAAU;QACdC,EAAE,EAACH,IAAI;QACPI,KAAK,EAACJ,IAAI;mEACFR,KAAA,CAAAa,cAAc,GAAAX,MAAA;8DAAdF,KAAA,CAAAa,cAAc,E,GAE3BnB,mBAAA,CAAmC;QAA3BoB,GAAG,EAACN;MAAI,GAAAO,gBAAA,CAAIP,IAAI,wBAAAQ,UAAA,E;wCAG5BnB,YAAA,CAA0FoB,4BAAA;MAAvEC,KAAuB,EAAvB;QAAA;MAAA,CAAuB;MAAEC,OAAK,EAAEC,QAAA,CAAAC;;wBAAY,MAAO,C,iBAAP,SAAO,E;;;;+BAExExB,YAAA,CAAwEoB,4BAAA;IAApDE,OAAK,EAAEC,QAAA,CAAAE;EAAS;sBAAE,MAAc,C,iBAAd,gBAAc,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}